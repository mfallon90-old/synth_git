
import random
import cocotb
from cocotbext.axi import AxiLiteBus, AxiLiteMaster
from cocotb.clock import Clock
from cocotb.triggers import Timer, RisingEdge, ClockCycles


CHAN_1_C_ADDR   = 0
CHAN_2_C_ADDR   = 4
CHAN_3_C_ADDR   = 8
CHAN_4_C_ADDR   = 12
CHAN_5_C_ADDR   = 16
CHAN_6_C_ADDR   = 20
CHAN_7_C_ADDR   = 24
CHAN_8_C_ADDR   = 28
CHAN_9_C_ADDR   = 32
CHAN_10_C_ADDR  = 36
CHAN_11_C_ADDR  = 40
CHAN_12_C_ADDR  = 44
CHAN_13_C_ADDR  = 48
CHAN_14_C_ADDR  = 52
CHAN_15_C_ADDR  = 56
CHAN_16_C_ADDR  = 60

CHAN_1_M_ADDR   = 64+0
CHAN_2_M_ADDR   = 64+4
CHAN_3_M_ADDR   = 64+8
CHAN_4_M_ADDR   = 64+12
CHAN_5_M_ADDR   = 64+16
CHAN_6_M_ADDR   = 64+20
CHAN_7_M_ADDR   = 64+24
CHAN_8_M_ADDR   = 64+28
CHAN_9_M_ADDR   = 64+32
CHAN_10_M_ADDR  = 64+36
CHAN_11_M_ADDR  = 64+40
CHAN_12_M_ADDR  = 64+44
CHAN_13_M_ADDR  = 64+48
CHAN_14_M_ADDR  = 64+52
CHAN_15_M_ADDR  = 64+56
CHAN_16_M_ADDR  = 64+60

TAU_ADDR = 128

# TAU         = (0b0101_1111_0001_1100_0101_1111_0001_1100)
# TAU         = (0b0000_0000_0000_0100_0000_0000_0000_0100)
# TAU         = (0b0000_0001_0101_0100_0000_0001_0101_0100)
TAU_1         = (0b00_00001_000_0000000_00000_00110_00110)
TAU_2         = (0b01_00001_000_0000000_00000_00110_00110)
TAU_3         = (0b10_00001_000_0000000_00000_00110_00110)
TAU_4         = (0b11_00001_000_0000000_00000_00110_00110)

# ATTACK_TAU  = (0b0000_0001_0000_0000_0101_1111_0001_1100)
# DECAY_TAU   = (0b0000_0001_0000_0000_0101_1111_0001_1100)

ON_MASK     = (0b1000_0000_0000_0000_0000_0000_0000_0000)
OFF_MASK    = (0b0111_1111_1111_1111_1111_1111_1111_1111)
NOTE_OFF    = (0b0000_0000_0000_0000_0000_0000_0000_0000)
C0          = (0b0000_0000_0000_1001_0001_1100_1100_0110)
CS0         = (0b0000_0000_0000_1001_1010_0111_0111_1101)
D0          = (0b0000_0000_0000_1010_0011_1010_0111_0011)
DS0         = (0b0000_0000_0000_1010_1101_0110_0010_0111)
E0          = (0b0000_0000_0000_1011_0111_1011_0001_1101)
F0          = (0b0000_0000_0000_1100_0010_1001_1110_0001)
FS0         = (0b0000_0000_0000_1100_1110_0011_0000_1011)
G0          = (0b0000_0000_0000_1101_1010_0111_0011_0110)
GS0         = (0b0000_0000_0000_1110_0111_0111_0000_1100)
A0          = (0b0000_0000_0000_1111_0101_0011_0011_1110)
AS0         = (0b0000_0000_0001_0000_0011_1100_1000_1000)
B0          = (0b0000_0000_0001_0001_0011_0011_1011_0001)
C1          = (0b0000_0000_0001_0010_0011_1001_1000_1101)
CS1         = (0b0000_0000_0001_0011_0100_1110_1111_1010)
D1          = (0b0000_0000_0001_0100_0111_0100_1110_0111)
DS1         = (0b0000_0000_0001_0101_1010_1100_0100_1110)
E1          = (0b0000_0000_0001_0110_1111_0110_0011_1001)
F1          = (0b0000_0000_0001_1000_0101_0011_1100_0011)
FS1         = (0b0000_0000_0001_1001_1100_0110_0001_0101)
G1          = (0b0000_0000_0001_1011_0100_1110_0110_1101)
GS1         = (0b0000_0000_0001_1100_1110_1110_0001_1001)
A1          = (0b0000_0000_0001_1110_1010_0110_0111_1101)
AS1         = (0b0000_0000_0010_0000_0111_1001_0001_0000)
B1          = (0b0000_0000_0010_0010_0110_0111_0110_0010)
C2          = (0b0000_0000_0010_0100_0111_0011_0001_1001)
CS2         = (0b0000_0000_0010_0110_1001_1101_1111_0100)
D2          = (0b0000_0000_0010_1000_1110_1001_1100_1110)
DS2         = (0b0000_0000_0010_1011_0101_1000_1001_1100)
E2          = (0b0000_0000_0010_1101_1110_1100_0111_0010)
F2          = (0b0000_0000_0011_0000_1010_0111_1000_0110)
FS2         = (0b0000_0000_0011_0011_1000_1100_0010_1010)
G2          = (0b0000_0000_0011_0110_1001_1100_1101_1010)
GS2         = (0b0000_0000_0011_1001_1101_1100_0011_0010)
A2          = (0b0000_0000_0011_1101_0100_1100_1111_1001)
AS2         = (0b0000_0000_0100_0000_1111_0010_0010_0000)
B2          = (0b0000_0000_0100_0100_1100_1110_1100_0101)
C3          = (0b0000_0000_0100_1000_1110_0110_0011_0010)
CS3         = (0b0000_0000_0100_1101_0011_1011_1110_1001)
D3          = (0b0000_0000_0101_0001_1101_0011_1001_1011)
DS3         = (0b0000_0000_0101_0110_1011_0001_0011_1000)
E3          = (0b0000_0000_0101_1011_1101_1000_1110_0101)
F3          = (0b0000_0000_0110_0001_0100_1111_0000_1011)
FS3         = (0b0000_0000_0110_0111_0001_1000_0101_0101)
G3          = (0b0000_0000_0110_1101_0011_1001_1011_0011)
GS3         = (0b0000_0000_0111_0011_1011_1000_0110_0100)
A3          = (0b0000_0000_0111_1010_1001_1001_1111_0011)
AS3         = (0b0000_0000_1000_0001_1110_0100_0100_0001)
B3          = (0b0000_0000_1000_1001_1001_1101_1000_1001)
C4          = (0b0000_0000_1001_0001_1100_1100_0110_0101)
CS4         = (0b0000_0000_1001_1010_0111_0111_1101_0001)
D4          = (0b0000_0000_1010_0011_1010_0111_0011_0111)
DS4         = (0b0000_0000_1010_1101_0110_0010_0110_1111)
E4          = (0b0000_0000_1011_0111_1011_0001_1100_1010)
F4          = (0b0000_0000_1100_0010_1001_1110_0001_0110)
FS4         = (0b0000_0000_1100_1110_0011_0000_1010_1010)
G4          = (0b0000_0000_1101_1010_0111_0011_0110_0111)
GS4         = (0b0000_0000_1110_0111_0111_0000_1100_1000)
A4          = (0b0000_0000_1111_0101_0011_0011_1110_0110)
AS4         = (0b0000_0001_0000_0011_1100_1000_1000_0010)
B4          = (0b0000_0001_0001_0011_0011_1011_0001_0010)
C5          = (0b0000_0001_0010_0011_1001_1000_1100_1001)
CS5         = (0b0000_0001_0011_0100_1110_1111_1010_0010)
D5          = (0b0000_0001_0100_0111_0100_1110_0110_1110)
DS5         = (0b0000_0001_0101_1010_1100_0100_1101_1110)
E5          = (0b0000_0001_0110_1111_0110_0011_1001_0100)
F5          = (0b0000_0001_1000_0101_0011_1100_0010_1101)
FS5         = (0b0000_0001_1001_1100_0110_0001_0101_0011)
G5          = (0b0000_0001_1011_0100_1110_0110_1100_1110)
GS5         = (0b0000_0001_1100_1110_1110_0001_1001_0000)
A5          = (0b0000_0001_1110_1010_0110_0111_1100_1011)
AS5         = (0b0000_0010_0000_0111_1001_0001_0000_0100)
B5          = (0b0000_0010_0010_0110_0111_0110_0010_0101)
C6          = (0b0000_0010_0100_0111_0011_0001_1001_0010)
CS6         = (0b0000_0010_0110_1001_1101_1111_0100_0101)
D6          = (0b0000_0010_1000_1110_1001_1100_1101_1100)
DS6         = (0b0000_0010_1011_0101_1000_1001_1011_1100)
E6          = (0b0000_0010_1101_1110_1100_0111_0010_0111)
F6          = (0b0000_0011_0000_1010_0111_1000_0101_1001)
FS6         = (0b0000_0011_0011_1000_1100_0010_1010_0111)
G6          = (0b0000_0011_0110_1001_1100_1101_1001_1100)
GS6         = (0b0000_0011_1001_1101_1100_0011_0001_1111)
A6          = (0b0000_0011_1101_0100_1100_1111_1001_0110)
AS6         = (0b0000_0100_0000_1111_0010_0010_0000_1000)
B6          = (0b0000_0100_0100_1100_1110_1100_0100_1001)
C7          = (0b0000_0100_1000_1110_0110_0011_0010_0101)
CS7         = (0b0000_0100_1101_0011_1011_1110_1000_1001)
D7          = (0b0000_0101_0001_1101_0011_1001_1011_1000)
DS7         = (0b0000_0101_0110_1011_0001_0011_0111_1000)
E7          = (0b0000_0101_1011_1101_1000_1110_0100_1111)
F7          = (0b0000_0110_0001_0100_1111_0000_1011_0011)
FS7         = (0b0000_0110_0111_0001_1000_0101_0100_1101)
G7          = (0b0000_0110_1101_0011_1001_1011_0011_1000)
GS7         = (0b0000_0111_0011_1011_1000_0110_0011_1111)
A7          = (0b0000_0111_1010_1001_1001_1111_0010_1100)
AS7         = (0b0000_1000_0001_1110_0100_0100_0001_0000)
B7          = (0b0000_1000_1001_1001_1101_1000_1001_0011)
C8          = (0b0000_1001_0001_1100_1100_0110_0100_1010)
CS8         = (0b0000_1001_1010_0111_0111_1101_0001_0010)
D8          = (0b0000_1010_0011_1010_0111_0011_0110_1111)
DS8         = (0b0000_1010_1101_0110_0010_0110_1111_0001)
E8          = (0b0000_1011_0111_1011_0001_1100_1001_1101)
F8          = (0b0000_1100_0010_1001_1110_0001_0110_0110)
FS8         = (0b0000_1100_1110_0011_0000_1010_1001_1011)
G8          = (0b0000_1101_1010_0111_0011_0110_0110_1111)
GS8         = (0b0000_1110_0111_0111_0000_1100_0111_1110)
A8          = (0b0000_1111_0101_0011_0011_1110_0101_1000)
AS8         = (0b0001_0000_0011_1100_1000_1000_0010_0000)
B8          = (0b0001_0001_0011_0011_1011_0001_0010_0101)
C9          = (0b0001_0010_0011_1001_1000_1100_1001_0100)
CS9         = (0b0001_0011_0100_1110_1111_1010_0010_0100)
D9          = (0b0001_0100_0111_0100_1110_0110_1101_1110)
DS9         = (0b0001_0101_1010_1100_0100_1101_1110_0001)
E9          = (0b0001_0110_1111_0110_0011_1001_0011_1011)
F9          = (0b0001_1000_0101_0011_1100_0010_1100_1100)
FS9         = (0b0001_1001_1100_0110_0001_0101_0011_0110)
G9          = (0b0001_1011_0100_1110_0110_1100_1101_1111)
GS9         = (0b0001_1100_1110_1110_0001_1000_1111_1100)
A9          = (0b0001_1110_1010_0110_0111_1100_1011_0001)
AS9         = (0b0010_0000_0111_1001_0001_0000_0100_0000)
B9          = (0b0010_0010_0110_0111_0110_0010_0100_1011)
C10         = (0b0010_0100_0111_0011_0001_1001_0010_0111)
CS10        = (0b0010_0110_1001_1101_1111_0100_0100_1001)
D10         = (0b0010_1000_1110_1001_1100_1101_1011_1101)
DS10        = (0b0010_1011_0101_1000_1001_1011_1100_0011)
E10         = (0b0010_1101_1110_1100_0111_0010_0111_0110)
F10         = (0b0011_0000_1010_0111_1000_0101_1001_0111)
FS10        = (0b0011_0011_1000_1100_0010_1010_0110_1100)
G10         = (0b0011_0110_1001_1100_1101_1001_1011_1110)
GS10        = (0b0011_1001_1101_1100_0011_0001_1111_1000)
A10         = (0b0011_1101_0100_1100_1111_1001_0110_0010)
AS10        = (0b0100_0000_1111_0010_0010_0000_1000_0000)
B10         = (0b0100_0100_1100_1110_1100_0100_1001_0110)
C11         = (0b0100_1000_1110_0110_0011_0010_0100_1111)
CS11        = (0b0100_1101_0011_1011_1110_1000_1001_0001)
D11         = (0b0101_0001_1101_0011_1001_1011_0111_1010)
DS11        = (0b0101_0110_1011_0001_0011_0111_1000_0101)
E11         = (0b0101_1011_1101_1000_1110_0100_1110_1100)
F11         = (0b0110_0001_0100_1111_0000_1011_0010_1110)
FS11        = (0b0110_0111_0001_1000_0101_0100_1101_1000)
G11         = (0b0110_1101_0011_1001_1011_0011_0111_1100)
GS11        = (0b0111_0011_1011_1000_0110_0011_1111_0000)
A11         = (0b0111_1010_1001_1001_1111_0010_1100_0100)
AS11        = (0b1000_0001_1110_0100_0100_0001_0000_0000)
B11         = (0b1000_1001_1001_1101_1000_1001_0010_1011)
C12         = (0b1001_0001_1100_1100_0110_0100_1001_1110)
CS12        = (0b1001_1010_0111_0111_1101_0001_0010_0011)
D12         = (0b1010_0011_1010_0111_0011_0110_1111_0011)
DS12        = (0b1010_1101_0110_0010_0110_1111_0000_1010)
E12         = (0b1011_0111_1011_0001_1100_1001_1101_1000)
F12         = (0b1100_0010_1001_1110_0001_0110_0101_1100)
FS12        = (0b1100_1110_0011_0000_1010_1001_1010_1111)
G12         = (0b1101_1010_0111_0011_0110_0110_1111_1000)
GS12        = (0b1110_0111_0111_0000_1100_0111_1110_0000)
A12         = (0b1111_0101_0011_0011_1110_0101_1000_0111)


# Async system reset function
async def reset_dut(reset, reset_n, duration_ns):
    reset_n.value = 0
    reset.value = 1
    await Timer(duration_ns, units="ns")
    reset_n.value = 1
    reset.value = 0
    reset_n._log.debug("Reset complete")

 
@cocotb.test()
async def read_write(dut):
    """Simple test for axi slave"""

    cocotb.start_soon(Clock(dut.s_axi_aclk, 5, units="ns").start())
    
    # Declare axi lite master
    axi_master = AxiLiteMaster(AxiLiteBus.from_prefix(dut, "s_axi"), dut.s_axi_aclk, 
                                dut.s_axi_aresetn, reset_active_level=False)

    # # Reset system
    await reset_dut(dut.sys_rst, dut.s_axi_aresetn, 20)

    # Write carrier word and modulating word

    write_op = await axi_master.write(TAU_ADDR, TAU_1.to_bytes(4, byteorder = 'little'))

    # write_op = await axi_master.write(CHAN_1_M_ADDR, A8.to_bytes(4, byteorder = 'little'))
    write_op = await axi_master.write(CHAN_1_C_ADDR,  (A5 | ON_MASK).to_bytes(4, byteorder = 'little'))
    # write_op = await axi_master.write(CHAN_2_C_ADDR,  (C5 | ON_MASK).to_bytes(4, byteorder = 'little'))
    # write_op = await axi_master.write(CHAN_3_C_ADDR,  (E5 | ON_MASK).to_bytes(4, byteorder = 'little'))
    # write_op = await axi_master.write(CHAN_4_C_ADDR,  (A6 | ON_MASK).to_bytes(4, byteorder = 'little'))
    # write_op = await axi_master.write(CHAN_5_C_ADDR,  (C6 | ON_MASK).to_bytes(4, byteorder = 'little'))
    # write_op = await axi_master.write(CHAN_6_C_ADDR,  (E6 | ON_MASK).to_bytes(4, byteorder = 'little'))
    # write_op = await axi_master.write(CHAN_7_C_ADDR,  (A7 | ON_MASK).to_bytes(4, byteorder = 'little'))
    # write_op = await axi_master.write(CHAN_8_C_ADDR,  (C7 | ON_MASK).to_bytes(4, byteorder = 'little'))
    # write_op = await axi_master.write(CHAN_9_C_ADDR,  (E7 | ON_MASK).to_bytes(4, byteorder = 'little'))
    # write_op = await axi_master.write(CHAN_10_C_ADDR, (A8 | ON_MASK).to_bytes(4, byteorder = 'little'))
    # write_op = await axi_master.write(CHAN_11_C_ADDR, (C8 | ON_MASK).to_bytes(4, byteorder = 'little'))
    # write_op = await axi_master.write(CHAN_12_C_ADDR, (E8 | ON_MASK).to_bytes(4, byteorder = 'little'))
    # write_op = await axi_master.write(CHAN_13_C_ADDR, (A4 | ON_MASK).to_bytes(4, byteorder = 'little'))
    # write_op = await axi_master.write(CHAN_14_C_ADDR, (C4 | ON_MASK).to_bytes(4, byteorder = 'little'))
    # write_op = await axi_master.write(CHAN_15_C_ADDR, (E4 | ON_MASK).to_bytes(4, byteorder = 'little'))
    # write_op = await axi_master.write(CHAN_16_C_ADDR, (A3 | ON_MASK).to_bytes(4, byteorder = 'little'))

    # wait for a long time
    await ClockCycles(dut.word_select, 200)

    # Disable the carrier word
    # write_op = await axi_master.write(CHAN_1_C_ADDR, (A5 & OFF_MASK).to_bytes(4, byteorder = 'little'))

    # await RisingEdge(dut.interrupt)
    # write_op = await axi_master.write(CHAN_1_M_ADDR, NOTE_OFF.to_bytes(4, byteorder = 'little'))

    # await ClockCycles(dut.word_select, 100

    dut._log.info('Test done')

